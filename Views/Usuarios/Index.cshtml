@model ProducScan.Models.ViewModels.UsuariosLogsViewModel
@{
    ViewData["Title"] = "Administrar Usuarios";
}



<ul class="nav nav-tabs" id="usuariosLogsTabs" role="tablist">
    <li class="nav-item" role="presentation">
        <button class="nav-link active" id="usuarios-tab" data-bs-toggle="tab" data-bs-target="#usuarios" type="button" role="tab">Usuarios</button>
    </li>
    <li class="nav-item" role="presentation">
        <button class="nav-link" id="logs-tab" data-bs-toggle="tab" data-bs-target="#logs" type="button" role="tab">Logs</button>
    </li>
</ul>

<div class="tab-content mt-3">
    <div class="tab-pane fade show active" id="usuarios" role="tabpanel">
        <div class="d-flex justify-content-between mb-3">
            <h3>Usuarios</h3>
            <button class="btn btn-primary rounded-pill" id="btnNuevo">
                <i class="bi bi-person-plus"></i> Nuevo Usuario
            </button>
        </div>
        <div id="tablaUsuariosContainer">
        @await Html.PartialAsync("_TablaUsuarios", Model.Usuarios)
        </div>
    </div>
    <div class="tab-pane fade" id="logs" role="tabpanel">
        <div class="row mb-3">
            <div class="col-md-3">
                <label for="filtroNivel" class="form-label">Nivel</label>
                <select id="filtroNivel" class="form-select">
                    <option value="all">Todos</option>
                    <option value="Info">Info</option>
                    <option value="Warning">Warning</option>
                    <option value="Error">Error</option>
                    <option value="Critical">Critical</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filtroCategoria" class="form-label">Categoría</label>
                <select id="filtroCategoria" class="form-select">
                    <option value="all">Todas</option>
                    <option value="Producción">Producción</option>
                    <option value="Sistema">Sistema</option>
                </select>
            </div>
            <div class="col-md-3">
                <label for="filtroFecha" class="form-label">Fecha</label>
                <input type="date" id="filtroFecha" class="form-control" max="@DateTime.Now.ToString("yyyy-MM-dd")" />
            </div>
        </div>
        <div id="logsContainer" class="p-2 text-center text-muted">
            
            <i class="bi bi-arrow-repeat"></i> Cargando logs...


        </div>

        <!-- Paginación debajo del accordion -->
        <div class="d-flex justify-content-between align-items-center mt-3">
            <div>
                <label for="pageSizeSelect" class="form-label me-2">Registros por página:</label>
                <select id="pageSizeSelect" class="form-select form-select-sm d-inline-block" style="width:auto;">
                    <option value="5">5</option>
                    <option value="10" selected>10</option>
                    <option value="30">30</option>
                    <option value="50">50</option>
                </select>
            </div>

            <nav>
                <ul class="pagination pagination-sm mb-0" id="paginationControls">
                    @* Aquí el JS dibuja los botones dinámicamente *@
                </ul>
            </nav>
        </div>



    </div>
</div>


<!-- Modal genérico -->
<div class="modal fade" id="modalUsuario" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content" id="modalContent">
            <!-- Aquí se carga el partial -->
        </div>
    </div>
</div>

<!-- Toasts -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 1100">
    <div id="toastSuccess" class="toast align-items-center text-bg-success border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body"></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>
    <div id="toastError" class="toast align-items-center text-bg-danger border-0" role="alert">
        <div class="d-flex">
            <div class="toast-body"></div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast"></button>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        // State
        let state = {
                nivel: "all",
                categoria: "all",
                fecha: "",
                page: 1,
                pageSize: 10
            };
        // Guardar qué accordions están abiertos
        let openAccordions = new Set();

        $(document).on('shown.bs.collapse', '.accordion-collapse', function () {
            openAccordions.add(this.id);
        });

        $(document).on('hidden.bs.collapse', '.accordion-collapse', function () {
            openAccordions.delete(this.id);
        });
            function cargarLogs() {
                const { nivel, categoria, fecha, page, pageSize } = state;
                const qNivel = encodeURIComponent(nivel);
                const qCat = encodeURIComponent(categoria);
                const qFecha = encodeURIComponent(fecha || "");

                $("#logsContainer").load(`/Logs/TablaLogs?nivel=${qNivel}&categoria=${qCat}&fecha=${qFecha}&page=${page}&pageSize=${pageSize}`, function () {
                    const meta = $("#logsMeta");
                    state.page = parseInt(meta.data("page")) || 1;
                    state.pageSize = parseInt(meta.data("pagesize")) || state.pageSize;
                    const totalPaginas = parseInt(meta.data("totalpaginas")) || 1;

                    $("#filtroNivel").val(state.nivel);
                    $("#filtroCategoria").val(state.categoria);
                    $("#filtroFecha").val(state.fecha);
                    $("#pageSizeSelect").val(state.pageSize);

                    renderPaginacion(totalPaginas);

                    // 👇 Reabrir los accordions que estaban abiertos
                    openAccordions.forEach(id => {
                        $("#" + id).addClass("show");
                        $("[data-bs-target='#" + id + "']")
                            .removeClass("collapsed")
                            .attr("aria-expanded", "true");
                    });
                });
            }

            function renderPaginacion(totalPaginas) {
                let html = "";
                html += `<li class="page-item ${state.page === 1 ? "disabled" : ""}">
                            <a class="page-link" href="#" data-page="${state.page - 1}">Anterior</a>
                         </li>`;
                for (let i = 1; i <= totalPaginas; i++) {
                    html += `<li class="page-item ${i === state.page ? "active" : ""}">
                                <a class="page-link" href="#" data-page="${i}">${i}</a>
                             </li>`;
                }
                html += `<li class="page-item ${state.page === totalPaginas ? "disabled" : ""}">
                            <a class="page-link" href="#" data-page="${state.page + 1}">Siguiente</a>
                         </li>`;
                $("#paginationControls").html(html);
            }

            // Eventos de filtros
            $(document).on("change", "#filtroNivel", function () {
                state.nivel = $(this).val();
                state.page = 1;
                cargarLogs();
            });

            $(document).on("change", "#filtroCategoria", function () {
                state.categoria = $(this).val();
                state.page = 1;
                cargarLogs();
            });

            $(document).on("change", "#filtroFecha", function () {
                state.fecha = $(this).val();
                state.page = 1;
                cargarLogs();
            });

            // Cambio de tamaño de página
            $(document).on("change", "#pageSizeSelect", function () {
                state.pageSize = parseInt($(this).val());
                state.page = 1;
                cargarLogs();
            });

            // Paginación dinámica
            $(document).on("click", "#paginationControls .page-link", function (e) {
                e.preventDefault();
                const target = parseInt($(this).data("page"));
                if (!isNaN(target) && target > 0) {
                    state.page = target;
                    cargarLogs();
                }
            });

            // Intervalo de refresco solo cuando estás en la pestaña de logs
            let logsInterval;
            document.getElementById('logs-tab').addEventListener('shown.bs.tab', function () {
                cargarLogs();
                logsInterval = setInterval(() => cargarLogs(), 3000);
            });

            document.getElementById('usuarios-tab').addEventListener('shown.bs.tab', function () {
                clearInterval(logsInterval);
            });

            // Toasts
            const modal = new bootstrap.Modal(document.getElementById('modalUsuario'));
            const toastSuccess = new bootstrap.Toast(document.getElementById('toastSuccess'));
            const toastError = new bootstrap.Toast(document.getElementById('toastError'));

            function showToast(success, message) {
                if (success) {
                    document.querySelector("#toastSuccess .toast-body").innerText = message;
                    toastSuccess.show();
                } else {
                    document.querySelector("#toastError .toast-body").innerText = message;
                    toastError.show();
                }
            }

            // Nuevo usuario
            $("#btnNuevo").click(function () {
                $("#modalContent").load("/Usuarios/Crear", function () {
                    modal.show();
                });
            });

            // Editar usuario
            $(document).on("click", ".btnEditar", function () {
                let id = $(this).data("id");
                $("#modalContent").load("/Usuarios/Editar/" + id, function () {
                    modal.show();
                });
            });

            // Eliminar usuario
            $(document).on("click", ".btnEliminar", function () {
                let id = $(this).data("id");
                $("#modalContent").load("/Usuarios/Eliminar/" + id, function () {
                    modal.show();
                });
            });

            function refreshTabla() {
                $("#tablaUsuariosContainer").load("/Usuarios/TablaUsuarios");
            }

            $(document).on("submit", "form.ajaxForm", function (e) {
                e.preventDefault();
                let form = $(this);
                $.post(form.attr("action"), form.serialize())
                    .done(function (res) {
                        if (res.success) {
                            modal.hide();
                            refreshTabla();
                            showToast(true, res.message);
                        } else {
                            showToast(false, res.message);
                        }
                    })
                    .fail(function () {
                        showToast(false, "Error en la petición.");
                    });
            });

            // Carga inicial si estás en logs
            if (document.getElementById('logs-tab').classList.contains('active')) {
                cargarLogs();
                logsInterval = setInterval(() => cargarLogs(), 3000);
            }

    </script>
}